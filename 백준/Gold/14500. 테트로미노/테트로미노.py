# Baekjoon Online Judge - 14500번. 테트로미노

def check(x, y):
    global max_num
    for i in range(19):
        temp = 0
        flag = True
        for j in range(4):
            nx = x + shapes[i][j][0]
            ny = y + shapes[i][j][1]
            if nx < 0 or nx >= N or ny < 0 or ny >= M:
                flag = False
                break
            temp += area[nx][ny]
        if flag:
            if temp > max_num:
                max_num = temp


# [0, 0] 기준을 왼쪽 첫 시작 부분들 택
shapes = [
    [[0, 0], [0, 1], [0, 2], [0, 3]], # 1줄로된 것 (가로)
    [[0, 0], [1, 0], [2, 0], [3, 0]], # 1줄로된 것 (세로)
    [[0, 0], [0, 1], [1, 0], [1, 1]], # 정사각형
    [[0, 0], [1, 0], [2, 0], [2, 1]],
    [[0, 0], [0, 1], [0, 2], [1, 0]],
    [[0, 0], [0, 1], [1, 1], [2, 1]],
    [[0, 0], [0, 1], [0, 2], [-1, 2]],
    [[0, 0], [0, 1], [-1, 1], [-2, 1]],
    [[0, 0], [1, 0], [1, 1], [1, 2]],
    [[0, 0], [0, 1], [1, 0], [2, 0]],
    [[0, 0], [0, 1], [0, 2], [1, 2]], # 8가지 케이스
    [[0, 0], [1, 0], [1, 1], [2, 1]],
    [[0, 0], [0, 1], [-1, 1], [-1, 2]],
    [[0, 0], [0, 1], [-1, 1], [1, 0]],
    [[0, 0], [0, 1], [1, 1], [1, 2]], # 4가지 케이스
    [[0, 0], [0, 1], [1, 1], [0, 2]],
    [[0, 0], [0, 1], [-1, 1], [1, 1]],
    [[0, 0], [0, 1], [-1, 1], [0, 2]],
    [[0, 0], [1, 0], [1, 1], [2, 0]], # 4가지 케이스
]

N, M = map(int, input().split())
area = []
max_num = 0
for _ in range(N):
    area.append(list(map(int, input().split())))

for i in range(N):
    for j in range(M):
        check(i, j)
print(max_num)

